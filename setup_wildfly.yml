---
- hosts: wildfly
  become: yes
  tasks:
    - name: Update repositories cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install jdk-11
      ansible.builtin.apt:
        name: openjdk-11-jdk
        state: present

    - name: wildfly directory checking
      ansible.builtin.stat:
        path: /opt/wildfly
      register: wildfly_dir

    - name: test directory checking
      ansible.builtin.stat:
        path: /test
      register: test_dir

    - name: directory creation
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - /opt/wildfly
        - /test
      when: wildfly_dir.stat.exists == false

    - name: download and install WildFly
      get_url:
        url: "https://github.com/wildfly/wildfly/releases/download/30.0.0.Final/wildfly-30.0.0.Final.tar.gz"
        dest: "/opt/wildfly"
      register: wildfly_download
      when: wildfly_dir.stat.exists == false
      when: test_dir.stat.exists == false

    - name: unpackage WildFly
      ansible.builtin.unarchive:
        src: "/opt/wildfly/wildfly-30.0.0.Final.tar.gz" # "{{ wildfly_download.dest }}"
        dest: "/opt/wildfly"
        remote_src: yes
        extra_opts: "--strip-components=1"
      when: wildfly_download.changed
      when: wildfly_dir.stat.exists == false
      when: test_dir.stat.exists == false

    - name: WildFly user creation
      user:
        name: wildfly
        system: yes
        shell: /bin/bash
        home: /opt/wildfly

    - name: wildfly ownership seting up
      file:
        path: /opt/wildfly
        state: directory
        owner: wildfly
        group: wildfly
        recurse: yes

    - name: setup systemd for WildFly
      ansible.builtin.copy:
        src: ./configs/wildfly.service
        dest: /etc/systemd/system/wildfly.service
      notify: Restart WildFly
      when: wildfly_dir.stat.exists == false

  handlers:
    - name: Restart WildFly
      ansible.builtin.systemd:
        name: wildfly
        state: restarted